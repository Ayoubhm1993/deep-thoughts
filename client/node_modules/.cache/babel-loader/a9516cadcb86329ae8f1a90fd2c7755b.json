{"ast":null,"code":"import React from'react';import{useParams}from'react-router-dom';import{useQuery}from'@apollo/react-hooks';import{QUERY_THOUGHT}from'../utils/queries';import ReactionList from'../components/ReactionList';import Auth from'../utils/auth';import ReactionForm from'../components/ReactionForm';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var SingleThought=function SingleThought(props){var _useParams=useParams(),thoughtId=_useParams.id;var _useQuery=useQuery(QUERY_THOUGHT,{variables:{id:thoughtId}}),loading=_useQuery.loading,data=_useQuery.data;var thought=(data===null||data===void 0?void 0:data.thought)||{};if(loading){return/*#__PURE__*/_jsx(\"div\",{children:\"Loading...\"});}console.log(thoughtId);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"card mb-3\",children:[/*#__PURE__*/_jsxs(\"p\",{className:\"card-header\",children:[/*#__PURE__*/_jsx(\"span\",{style:{fontWeight:700},className:\"text-light\",children:thought.username}),' ',\"thought on \",thought.createdAt]}),/*#__PURE__*/_jsx(\"div\",{className:\"card-body\",children:/*#__PURE__*/_jsx(\"p\",{children:thought.thoughtText})})]}),thought.reactionCount>0&&/*#__PURE__*/_jsx(ReactionList,{reactions:thought.reactions}),Auth.loggedIn()&&/*#__PURE__*/_jsx(ReactionForm,{thoughtId:thought._id})]});};export default SingleThought;","map":{"version":3,"sources":["C:/Users/AYOUB/Desktop/challenges/mern-21/deep-thoughts/client/src/pages/SingleThought.js"],"names":["React","useParams","useQuery","QUERY_THOUGHT","ReactionList","Auth","ReactionForm","SingleThought","props","thoughtId","id","variables","loading","data","thought","console","log","fontWeight","username","createdAt","thoughtText","reactionCount","reactions","loggedIn","_id"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,SAAT,KAA0B,kBAA1B,CACA,OAASC,QAAT,KAAyB,qBAAzB,CACA,OAASC,aAAT,KAA8B,kBAA9B,CACA,MAAOC,CAAAA,YAAP,KAAyB,4BAAzB,CACA,MAAOC,CAAAA,IAAP,KAAiB,eAAjB,CACA,MAAOC,CAAAA,YAAP,KAAyB,4BAAzB,C,wFAGA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAAC,KAAK,CAAI,gBACHP,SAAS,EADN,CACjBQ,SADiB,YACrBC,EADqB,eAEHR,QAAQ,CAACC,aAAD,CAAgB,CAChDQ,SAAS,CAAE,CAAED,EAAE,CAAED,SAAN,CADqC,CAAhB,CAFL,CAErBG,OAFqB,WAErBA,OAFqB,CAEZC,IAFY,WAEZA,IAFY,CAM7B,GAAMC,CAAAA,OAAO,CAAG,CAAAD,IAAI,OAAJ,EAAAA,IAAI,SAAJ,QAAAA,IAAI,CAAEC,OAAN,GAAiB,EAAjC,CAEA,GAAIF,OAAJ,CAAa,CACX,mBAAO,mCAAP,CACD,CACHG,OAAO,CAACC,GAAR,CAAYP,SAAZ,EACE,mBACE,oCACF,aAAK,SAAS,CAAC,WAAf,wBACE,WAAG,SAAS,CAAC,aAAb,wBACE,aAAM,KAAK,CAAE,CAAEQ,UAAU,CAAE,GAAd,CAAb,CAAkC,SAAS,CAAC,YAA5C,UACGH,OAAO,CAACI,QADX,EADF,CAGU,GAHV,eAIcJ,OAAO,CAACK,SAJtB,GADF,cAOE,YAAK,SAAS,CAAC,WAAf,uBACE,mBAAIL,OAAO,CAACM,WAAZ,EADF,EAPF,GADE,CAaDN,OAAO,CAACO,aAAR,CAAwB,CAAxB,eAA6B,KAAC,YAAD,EAAc,SAAS,CAAEP,OAAO,CAACQ,SAAjC,EAb5B,CAcDjB,IAAI,CAACkB,QAAL,iBAAmB,KAAC,YAAD,EAAc,SAAS,CAAET,OAAO,CAACU,GAAjC,EAdlB,GADF,CAkBD,CA9BD,CAgCA,cAAejB,CAAAA,aAAf","sourcesContent":["import React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport { QUERY_THOUGHT } from '../utils/queries';\r\nimport ReactionList from '../components/ReactionList';\r\nimport Auth from '../utils/auth';\r\nimport ReactionForm from '../components/ReactionForm'\r\n\r\n\r\nconst SingleThought = props => {\r\n  const { id: thoughtId } = useParams();\r\n  const { loading, data } = useQuery(QUERY_THOUGHT, {\r\n    variables: { id: thoughtId }\r\n  });\r\n  \r\n  const thought = data?.thought || {};\r\n  \r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\nconsole.log(thoughtId);\r\n  return (\r\n    <div>\r\n  <div className=\"card mb-3\">\r\n    <p className=\"card-header\">\r\n      <span style={{ fontWeight: 700 }} className=\"text-light\">\r\n        {thought.username}\r\n      </span>{' '}\r\n      thought on {thought.createdAt}\r\n    </p>\r\n    <div className=\"card-body\">\r\n      <p>{thought.thoughtText}</p>\r\n    </div>\r\n  </div>\r\n\r\n  {thought.reactionCount > 0 && <ReactionList reactions={thought.reactions} />}\r\n  {Auth.loggedIn() && <ReactionForm thoughtId={thought._id} />}\r\n</div>\r\n  );\r\n};\r\n\r\nexport default SingleThought;\r\n"]},"metadata":{},"sourceType":"module"}