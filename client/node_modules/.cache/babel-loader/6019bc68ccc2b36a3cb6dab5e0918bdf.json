{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AYOUB\\\\Desktop\\\\challenges\\\\mern-21\\\\deep-thoughts\\\\client\\\\src\\\\pages\\\\SingleThought.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/react-hooks';\nimport { QUERY_THOUGHT } from '../utils/queries';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SingleThought = props => {\n  _s();\n\n  const {\n    id: thoughtId\n  } = useParams();\n  const {\n    loading,\n    data\n  } = useQuery(QUERY_THOUGHT, {\n    variables: {\n      id: thoughtId\n    }\n  });\n  const thought = (data === null || data === void 0 ? void 0 : data.thought) || {};\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 12\n    }, this);\n  }\n\n  console.log(thoughtId);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"card-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontWeight: 700\n          },\n          className: \"text-light\",\n          children: thought.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 7\n        }, this), ' ', \"thought on \", thought.createdAt]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: thought.thoughtText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SingleThought, \"OVrss99Gl9ih60NYz/tmj6YngrA=\", false, function () {\n  return [useParams, useQuery];\n});\n\n_c = SingleThought;\nexport default SingleThought;\n\nvar _c;\n\n$RefreshReg$(_c, \"SingleThought\");","map":{"version":3,"sources":["C:/Users/AYOUB/Desktop/challenges/mern-21/deep-thoughts/client/src/pages/SingleThought.js"],"names":["React","useParams","useQuery","QUERY_THOUGHT","SingleThought","props","id","thoughtId","loading","data","variables","thought","console","log","fontWeight","username","createdAt","thoughtText"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,aAAT,QAA8B,kBAA9B;;;AAGA,MAAMC,aAAa,GAAGC,KAAK,IAAI;AAAA;;AAC7B,QAAM;AAAEC,IAAAA,EAAE,EAAEC;AAAN,MAAoBN,SAAS,EAAnC;AACA,QAAM;AAAEO,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAoBP,QAAQ,CAACC,aAAD,EAAgB;AAChDO,IAAAA,SAAS,EAAE;AAAEJ,MAAAA,EAAE,EAAEC;AAAN;AADqC,GAAhB,CAAlC;AAIA,QAAMI,OAAO,GAAG,CAAAF,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEE,OAAN,KAAiB,EAAjC;;AAEA,MAAIH,OAAJ,EAAa;AACX,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACHI,EAAAA,OAAO,CAACC,GAAR,CAAYN,SAAZ;AACE,sBACE;AAAA,2BACF;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE;AAAG,QAAA,SAAS,EAAC,aAAb;AAAA,gCACE;AAAM,UAAA,KAAK,EAAE;AAAEO,YAAAA,UAAU,EAAE;AAAd,WAAb;AAAkC,UAAA,SAAS,EAAC,YAA5C;AAAA,oBACGH,OAAO,CAACI;AADX;AAAA;AAAA;AAAA;AAAA,gBADF,EAGU,GAHV,iBAIcJ,OAAO,CAACK,SAJtB;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,+BACE;AAAA,oBAAIL,OAAO,CAACM;AAAZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADE;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CA3BD;;GAAMb,a;UACsBH,S,EACAC,Q;;;KAFtBE,a;AA6BN,eAAeA,aAAf","sourcesContent":["import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/react-hooks';\nimport { QUERY_THOUGHT } from '../utils/queries';\n\n\nconst SingleThought = props => {\n  const { id: thoughtId } = useParams();\n  const { loading, data } = useQuery(QUERY_THOUGHT, {\n    variables: { id: thoughtId }\n  });\n  \n  const thought = data?.thought || {};\n  \n  if (loading) {\n    return <div>Loading...</div>;\n  }\nconsole.log(thoughtId);\n  return (\n    <div>\n  <div className=\"card mb-3\">\n    <p className=\"card-header\">\n      <span style={{ fontWeight: 700 }} className=\"text-light\">\n        {thought.username}\n      </span>{' '}\n      thought on {thought.createdAt}\n    </p>\n    <div className=\"card-body\">\n      <p>{thought.thoughtText}</p>\n    </div>\n  </div>\n</div>\n  );\n};\n\nexport default SingleThought;\n"]},"metadata":{},"sourceType":"module"}