{"version":3,"sources":["utils/auth.js","components/Header/index.js","components/Footer/index.js","utils/queries.js","utils/mutations.js","components/ThoughtForm/index.js","components/ThoughtList/index.js","components/FriendList/index.js","pages/Home.js","pages/Login.js","pages/NoMatch.js","components/ReactionList/index.js","components/ReactionForm/index.js","pages/SingleThought.js","pages/Profile.js","pages/Signup.js","App.js","serviceWorker.js","index.js"],"names":["decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","window","location","assign","removeItem","Header","className","to","Auth","loggedIn","href","onClick","event","preventDefault","logout","Footer","QUERY_THOUGHTS","gql","QUERY_THOUGHT","QUERY_USER","QUERY_ME","QUERY_ME_BASIC","LOGIN_USER","ADD_USER","ADD_FRIEND","ADD_THOUGHT","ADD_REACTION","ThoughtForm","useMutation","update","cache","addThought","data","thoughts","readQuery","query","writeQuery","e","console","error","me","useState","thoughtText","setText","characterCount","setCharacterCount","handleFormSubmit","a","variables","onSubmit","placeholder","value","onChange","target","length","type","ThoughtList","title","map","thought","username","style","fontWeight","createdAt","_id","reactionCount","FriendList","friendCount","friends","friend","Home","useQuery","loading","userData","Login","props","email","password","formState","setFormState","login","handleChange","name","id","NoMatch","ReactionList","reactions","reaction","reactionBody","ReactionForm","thoughtId","setBody","addReaction","SingleThought","useParams","log","Profile","userParam","addFriend","user","getProfile","handleClick","Signup","addUser","client","ApolloClient","request","operation","setContext","headers","authorization","uri","App","exact","path","component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"mOAqDe,M,0FAjDX,WACE,OAAOA,YAAOC,KAAKC,c,sBAIrB,WAEE,IAAMC,EAAQF,KAAKC,WAEnB,QAASC,IAAUF,KAAKG,eAAeD,K,4BAIzC,SAAeA,GACb,IAEE,OADgBH,YAAOG,GACXE,IAAMC,KAAKC,MAAQ,IAK/B,MAAOC,GACP,OAAO,K,sBAKX,WAEE,OAAOC,aAAaC,QAAQ,c,mBAI9B,SAAMC,GAEJF,aAAaG,QAAQ,WAAYD,GAEjCE,OAAOC,SAASC,OAAO,O,oBAIzB,WAEEN,aAAaO,WAAW,YAExBH,OAAOC,SAASC,OAAO,S,aCZdE,EAjCA,WAKb,OACE,wBAAQC,UAAU,+CAAlB,SACE,sBAAKA,UAAU,0EAAf,UACE,cAAC,IAAD,CAAMC,GAAG,IAAT,SACE,iDAGL,qBAAKD,UAAU,cAAf,SACKE,EAAKC,WACN,qCACA,cAAC,IAAD,CAAMF,GAAG,WAAT,gBACA,mBAAGG,KAAK,IAAIC,QAfJ,SAAAC,GACbA,EAAMC,iBACNL,EAAKM,UAaA,uBAKD,qCACA,cAAC,IAAD,CAAMP,GAAG,SAAT,mBACA,cAAC,IAAD,CAAMA,GAAG,UAAT,+BCjBOQ,EARA,WACb,OACE,wBAAQT,UAAU,iCAAlB,SACE,qBAAKA,UAAU,YAAf,uC,0ECHOU,EAAiBC,IAAH,4SAkBdC,EAAgBD,IAAH,sRAmBbE,EAAaF,IAAH,wUAqBVG,EAAWH,IAAH,kYA2BRI,EAAiBJ,IAAH,2KCrFdK,EAAaL,IAAH,qNAYVM,EAAWN,IAAH,kQAYRO,EAAaP,IAAH,iNAcVQ,EAAcR,IAAH,kQAeXS,EAAeT,IAAH,sTC2BVU,EA3EK,WAAO,IAAD,EAEQC,sBAAYH,EAAa,CACvDI,OADuD,SAChDC,EADgD,GACd,IAAjBC,EAAgB,EAAxBC,KAAQD,WACtB,IAAI,IAEME,EAAaH,EAAMI,UAAU,CAAEC,MAAOnB,IAAtCiB,SACRH,EAAMM,WAAW,CACfD,MAAOnB,EACPgB,KAAM,CAAEC,SAAS,CAAEF,GAAH,mBAAkBE,OAEpC,MAAOI,GACPC,QAAQC,MAAMF,GATsB,IAa9BG,EAAOV,EAAMI,UAAU,CAAEC,MAAOf,IAAhCoB,GACRV,EAAMM,WAAW,CACfD,MAAOf,EACPY,KAAM,CAAEQ,GAAG,2BAAMA,GAAP,IAAWP,SAAS,GAAD,mBAAMO,EAAGP,UAAT,CAAmBF,YAnB9B,mBAEjBA,EAFiB,KAEHQ,EAFG,KAEHA,MAFG,EAwBSE,mBAAS,IAxBlB,mBAwBfC,EAxBe,KAwBFC,EAxBE,OAyBsBF,mBAAS,GAzB/B,mBAyBfG,EAzBe,KAyBCC,EAzBD,KAmCdC,EAAgB,uCAAG,WAAMlC,GAAN,SAAAmC,EAAA,6DACvBnC,EAAMC,iBADiB,kBAIfkB,EAAW,CACfiB,UAAW,CAAEN,iBALM,OASrBC,EAAQ,IACRE,EAAkB,GAVG,gDAYrBP,QAAQC,MAAR,MAZqB,yDAAH,sDAgB1B,OACE,gCACG,oBAAGjC,UAAS,cAA4B,MAAnBsC,GAA0BL,EAAQ,aAAe,IAAtE,8BACkBK,EADlB,OAEAL,GAAS,sBAAMjC,UAAU,OAAhB,wCAEV,uBACAA,UAAU,iEACV2C,SAAUH,EAFV,UAIA,0BACAI,YAAY,0BACZC,MAAOT,EACPpC,UAAU,6BACV8C,SArCmB,SAAAxC,GACbA,EAAMyC,OAAOF,MAAMG,QAAU,MAC/BX,EAAQ/B,EAAMyC,OAAOF,OACrBN,EAAkBjC,EAAMyC,OAAOF,MAAMG,YAoCvC,wBAAQhD,UAAU,sBAAsBiD,KAAK,SAA7C,2BCnCOC,EApCK,SAAC,GAAyB,IAAvBvB,EAAsB,EAAtBA,SAAUwB,EAAY,EAAZA,MAC/B,OAAKxB,EAASqB,OAKZ,gCACE,6BAAKG,IACJxB,GACCA,EAASyB,KAAI,SAAAC,GAAO,OAClB,sBAAuBrD,UAAU,YAAjC,UACE,oBAAGA,UAAU,cAAb,UACV,cAAC,IAAD,CACEC,GAAE,mBAAcoD,EAAQC,UACxBC,MAAO,CAAEC,WAAY,KACrBxD,UAAU,aAHZ,SAKGqD,EAAQC,WACH,IAPE,cAQED,EAAQI,aAEtB,qBAAKzD,UAAU,YAAf,SACE,eAAC,IAAD,CAAMC,GAAE,mBAAcoD,EAAQK,KAA9B,UACE,4BAAIL,EAAQjB,cACZ,oBAAGpC,UAAU,OAAb,wBACcqD,EAAQM,cADtB,eACiD,IAC9CN,EAAQM,cAAgB,MAAQ,QAFnC,6BAdgBN,EAAQK,WARjB,kDCiBIE,EAnBI,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,YAAaP,EAAwB,EAAxBA,SAAUQ,EAAc,EAAdA,QAC3C,OAAKA,GAAYA,EAAQd,OAKvB,gCACE,+BACGM,EADH,MACgBO,EADhB,IAC8C,IAAhBA,EAAoB,SAAW,aAE5DC,EAAQV,KAAI,SAAAW,GAAM,OACjB,wBAAQ/D,UAAU,+BAAlB,SACE,cAAC,IAAD,CAAMC,GAAE,mBAAc8D,EAAOT,UAA7B,SAA0CS,EAAOT,YADGS,EAAOL,WAT1D,oBAAG1D,UAAU,yBAAb,UAAuCsD,EAAvC,2BCwCIU,EAnCF,WAAO,IAAD,EACSC,mBAASvD,GAA3BwD,EADS,EACTA,QAASxC,EADA,EACAA,KAELyC,EAAaF,mBAASlD,GAA5BW,KACAC,GAAe,OAAJD,QAAI,IAAJA,OAAA,EAAAA,EAAMC,WAAY,GAC7BxB,EAAWD,EAAKC,WACtB,OACE,+BACE,sBAAKH,UAAU,iCAAf,UACGG,GACH,qBAAKH,UAAU,cAAf,SACE,cAAC,EAAD,MAGA,qBAAKA,UAAS,sBAAiBG,GAAY,YAA3C,SACG+D,EACC,6CAEA,cAAC,EAAD,CAAavC,SAAUA,EAAUwB,MAAM,kCAG1ChD,GAAYgE,EACf,qBAAKnE,UAAU,uBAAf,SACE,cAAC,EAAD,CACCsD,SAAUa,EAASjC,GAAGoB,SACtBO,YAAaM,EAASjC,GAAG2B,YACzBC,QAASK,EAASjC,GAAG4B,YAGlB,W,QCgCGM,EAlED,SAACC,GAAW,IAAD,EACWlC,mBAAS,CAAEmC,MAAO,GAAIC,SAAU,KAD3C,mBAChBC,EADgB,KACLC,EADK,OAEInD,sBAAYN,GAFhB,mBAEhB0D,EAFgB,KAEPzC,EAFO,KAEPA,MAGV0C,EAAe,SAACrE,GAAW,IAAD,EACNA,EAAMyC,OAAtB6B,EADsB,EACtBA,KAAM/B,EADgB,EAChBA,MAEd4B,EAAa,2BACRD,GADO,kBAETI,EAAO/B,MAKRL,EAAgB,uCAAG,WAAMlC,GAAN,iBAAAmC,EAAA,6DACvBnC,EAAMC,iBADiB,kBAIEmE,EAAM,CAC3BhC,UAAU,eAAM8B,KALG,gBAIb9C,EAJa,EAIbA,KAIRxB,EAAKwE,MAAMhD,EAAKgD,MAAMzF,OARD,gDAUrB+C,QAAQC,MAAR,MAVqB,yDAAH,sDAcpB,OACE,sBAAMjC,UAAU,+BAAhB,SACE,qBAAKA,UAAU,kBAAf,SACE,sBAAKA,UAAU,OAAf,UACE,oBAAIA,UAAU,cAAd,mBACA,sBAAKA,UAAU,YAAf,UACE,uBAAM2C,SAAUH,EAAhB,UACE,uBACExC,UAAU,aACV4C,YAAY,aACZgC,KAAK,QACL3B,KAAK,QACL4B,GAAG,QACHhC,MAAO2B,EAAUF,MACjBxB,SAAU6B,IAEZ,uBACE3E,UAAU,aACV4C,YAAY,SACZgC,KAAK,WACL3B,KAAK,WACL4B,GAAG,WACHhC,MAAO2B,EAAUD,SACjBzB,SAAU6B,IAEZ,wBAAQ3E,UAAU,oBAAoBiD,KAAK,SAA3C,uBAIDhB,GAAS,0DCrDP6C,EARC,WACd,OACE,qECoBWC,GArBM,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UACtB,OACE,sBAAKhF,UAAU,YAAf,UACA,qBAAKA,UAAU,cAAf,SACE,sBAAMA,UAAU,aAAhB,yBAEF,qBAAKA,UAAU,YAAf,SACGgF,GACCA,EAAU5B,KAAI,SAAA6B,GAAQ,OACpB,oBAAGjF,UAAU,YAAb,UACGiF,EAASC,aADZ,IAC2B,MACzB,eAAC,IAAD,CAAMjF,GAAE,mBAAcgF,EAAS3B,UAAYC,MAAO,CAAEC,WAAY,KAAhE,UACGyB,EAAS3B,SADZ,OAC0B2B,EAASxB,eAHPwB,EAASvB,cCkDlCyB,GAzDM,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UAAgB,EACNjD,mBAAS,IADH,mBAC/B+C,EAD+B,KACjBG,EADiB,OAEMlD,mBAAS,GAFf,mBAE/BG,EAF+B,KAEfC,EAFe,OAGLjB,sBAAYF,GAHP,mBAG/BkE,EAH+B,KAGhBrD,EAHgB,KAGhBA,MAWhBO,EAAgB,uCAAG,WAAMlC,GAAN,SAAAmC,EAAA,6DACvBnC,EAAMC,iBADiB,kBAIf+E,EAAY,CAChB5C,UAAW,CAAEwC,eAAcE,eALR,OASrBC,EAAQ,IACR9C,EAAkB,GAVG,gDAYrBP,QAAQC,MAAR,MAZqB,yDAAH,sDAgBtB,OACE,gCACE,oBAAGjC,UAAS,cAA4B,MAAnBsC,GAA0BL,EAAQ,aAAe,IAAtE,8BACoBK,EADpB,OAEGL,GAAS,sBAAMjC,UAAU,OAAhB,wCAEZ,uBACEA,UAAU,iEACV2C,SAAUH,EAFZ,UAIE,0BACEI,YAAY,sCACZC,MAAOqC,EACPlF,UAAU,6BACV8C,SAtCa,SAAAxC,GACfA,EAAMyC,OAAOF,MAAMG,QAAU,MAC/BqC,EAAQ/E,EAAMyC,OAAOF,OACrBN,EAAkBjC,EAAMyC,OAAOF,MAAMG,YAsCnC,wBAAQhD,UAAU,sBAAsBiD,KAAK,SAA7C,uBAKDhB,GAAS,8DChBDsD,GAhCO,SAAAlB,GAAU,IAClBe,EAAcI,cAAlBX,GADqB,EAEHZ,mBAASrD,EAAe,CAChD8B,UAAW,CAAEmC,GAAIO,KADXlB,EAFqB,EAErBA,QAASxC,EAFY,EAEZA,KAIX2B,GAAc,OAAJ3B,QAAI,IAAJA,OAAA,EAAAA,EAAM2B,UAAW,GAEjC,OAAIa,EACK,8CAEXlC,QAAQyD,IAAIL,GAER,gCACF,sBAAKpF,UAAU,YAAf,UACE,oBAAGA,UAAU,cAAb,UACE,sBAAMuD,MAAO,CAAEC,WAAY,KAAOxD,UAAU,aAA5C,SACGqD,EAAQC,WACH,IAHV,cAIcD,EAAQI,aAEtB,qBAAKzD,UAAU,YAAf,SACE,4BAAIqD,EAAQjB,mBAIfiB,EAAQM,cAAgB,GAAK,cAAC,GAAD,CAAcqB,UAAW3B,EAAQ2B,YAC9D9E,EAAKC,YAAc,cAAC,GAAD,CAAciF,UAAW/B,EAAQK,WC4CxCgC,GAnEC,WAAO,IACHC,EAAcH,cAAxBlC,SADY,EAGAhC,sBAAYJ,GAAzB0E,EAHa,sBAKM3B,mBAAS0B,EAAY9E,EAAaC,EAAU,CACpE4B,UAAW,CAAEY,SAAUqC,KADjBzB,EALY,EAKZA,QAASxC,EALG,EAKHA,KAIXmE,GAAW,OAAJnE,QAAI,IAAJA,OAAA,EAAAA,EAAMQ,MAAN,OAAYR,QAAZ,IAAYA,OAAZ,EAAYA,EAAMmE,OAAQ,GAEzC,GAAI3F,EAAKC,YAAcD,EAAK4F,aAAapE,KAAK4B,WAAaqC,EACzD,OAAO,cAAC,IAAD,CAAU1F,GAAG,aAGpB,GAAIiE,EACF,OAAO,6CAGT,KAAI,OAAC2B,QAAD,IAACA,OAAD,EAACA,EAAMvC,UACT,OACE,iIAMJ,IAAMyC,EAAW,uCAAG,sBAAAtD,EAAA,+EAEVmD,EAAU,CACdlD,UAAW,CAAEmC,GAAIgB,EAAKnC,OAHR,sDAMhB1B,QAAQC,MAAR,MANgB,wDAAH,qDAUjB,OACE,gCACE,sBAAKjC,UAAU,gBAAf,UACA,qBAAIA,UAAU,kDAAd,qBACU2F,EAAS,UAAME,EAAKvC,SAAX,MAA0B,OAD7C,eAGCqC,GACL,wBAAQ3F,UAAU,cAAcK,QAAS0F,EAAzC,2BAMI,sBAAK/F,UAAU,sCAAf,UACJ,qBAAKA,UAAU,uBAAf,SACE,cAAC,EAAD,CAAa2B,SAAUkE,EAAKlE,SAAUwB,MAAK,UAAK0C,EAAKvC,SAAV,sBAG7C,qBAAKtD,UAAU,uBAAf,SACE,cAAC,EAAD,CACEsD,SAAUuC,EAAKvC,SACfO,YAAagC,EAAKhC,YAClBC,QAAS+B,EAAK/B,eAIpB,qBAAK9D,UAAU,OAAf,UAAwB2F,GAAa,cAAC,EAAD,UCItBK,GA1EA,WAAO,IAAD,EACe7D,mBAAS,CAAEmB,SAAU,GAAIgB,MAAO,GAAIC,SAAU,KAD7D,mBACZC,EADY,KACDC,EADC,OAEUnD,sBAAYL,GAFtB,mBAEZgF,EAFY,KAEDhE,EAFC,KAEDA,MAEZ0C,EAAe,SAACrE,GAAW,IAAD,EACNA,EAAMyC,OAAtB6B,EADsB,EACtBA,KAAM/B,EADgB,EAChBA,MAEd4B,EAAa,2BACRD,GADO,kBAETI,EAAO/B,MAKRL,EAAgB,uCAAG,WAAMlC,GAAN,iBAAAmC,EAAA,6DACvBnC,EAAMC,iBADiB,kBAME0F,EAAQ,CAC7BvD,UAAU,eAAM8B,KAPG,gBAMb9C,EANa,EAMbA,KAGRxB,EAAKwE,MAAMhD,EAAKuE,QAAQhH,OATH,gDAWrB+C,QAAQC,MAAR,MAXqB,yDAAH,sDAcpB,OACE,sBAAMjC,UAAU,+BAAhB,SACE,qBAAKA,UAAU,kBAAf,SACE,sBAAKA,UAAU,OAAf,UACE,oBAAIA,UAAU,cAAd,qBACA,sBAAKA,UAAU,YAAf,UACE,uBAAM2C,SAAUH,EAAhB,UACE,uBACExC,UAAU,aACV4C,YAAY,gBACZgC,KAAK,WACL3B,KAAK,WACL4B,GAAG,WACHhC,MAAO2B,EAAUlB,SACjBR,SAAU6B,IAEZ,uBACE3E,UAAU,aACV4C,YAAY,aACZgC,KAAK,QACL3B,KAAK,QACL4B,GAAG,QACHhC,MAAO2B,EAAUF,MACjBxB,SAAU6B,IAEZ,uBACE3E,UAAU,aACV4C,YAAY,SACZgC,KAAK,WACL3B,KAAK,WACL4B,GAAG,WACHhC,MAAO2B,EAAUD,SACjBzB,SAAU6B,IAEZ,wBAAQ3E,UAAU,oBAAoBiD,KAAK,SAA3C,uBAIDhB,GAAS,4DCxDhBiE,GAAS,IAAIC,IAAa,CAC9BC,QAAS,SAAAC,GACP,IAAMpH,EAAQM,aAAaC,QAAQ,YAEnC6G,EAAUC,WAAW,CACnBC,QAAS,CACPC,cAAevH,EAAK,iBAAaA,GAAU,OAIjDwH,IAAK,aA2BQC,OAxBf,WACE,OACE,cAAC,iBAAD,CAAgBR,OAAQA,GAAxB,SACE,cAAC,IAAD,UACE,sBAAKlG,UAAU,4CAAf,UACE,cAAC,EAAD,IACA,qBAAKA,UAAU,YAAf,SACF,eAAC,IAAD,WACA,cAAC,IAAD,CAAO2G,OAAK,EAACC,KAAK,IAAIC,UAAW7C,IACjC,cAAC,IAAD,CAAO2C,OAAK,EAACC,KAAK,SAASC,UAAWzC,IACtC,cAAC,IAAD,CAAOuC,OAAK,EAACC,KAAK,UAAUC,UAAWb,KACvC,cAAC,IAAD,CAAOW,OAAK,EAACC,KAAK,sBAAsBC,UAAWnB,KACnD,cAAC,IAAD,CAAOiB,OAAK,EAACC,KAAK,eAAeC,UAAWtB,KAC5C,cAAC,IAAD,CAAOsB,UAAW/B,SAGhB,cAAC,EAAD,YCjCJgC,GAAcC,QACW,cAA7BpH,OAAOC,SAASoH,UAEe,UAA7BrH,OAAOC,SAASoH,UAEhBrH,OAAOC,SAASoH,SAASC,MACvB,2DAsCN,SAASC,GAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTK,MAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfT,UAAUC,cAAcS,YAI1B/F,QAAQyD,IACN,iHAKE2B,GAAUA,EAAOY,UACnBZ,EAAOY,SAASP,KAMlBzF,QAAQyD,IAAI,sCAGR2B,GAAUA,EAAOa,WACnBb,EAAOa,UAAUR,WAO5BS,OAAM,SAAAjG,GACLD,QAAQC,MAAM,4CAA6CA,MC1FjEkG,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SDYnB,SAAkBnB,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAImB,IAAIC,GAAwB9I,OAAOC,SAASQ,MACpDsI,SAAW/I,OAAOC,SAAS8I,OAIvC,OAGF/I,OAAOgJ,iBAAiB,QAAQ,WAC9B,IAAMxB,EAAK,UAAMsB,GAAN,sBAEP3B,KAgEV,SAAiCK,EAAOC,GAEtCwB,MAAMzB,EAAO,CACXZ,QAAS,CAAE,iBAAkB,YAE5BiB,MAAK,SAAAqB,GAEJ,IAAMC,EAAcD,EAAStC,QAAQwC,IAAI,gBAEnB,MAApBF,EAASG,QACO,MAAfF,IAA8D,IAAvCA,EAAYG,QAAQ,cAG5C5B,UAAUC,cAAc4B,MAAM1B,MAAK,SAAAC,GACjCA,EAAa0B,aAAa3B,MAAK,WAC7B7H,OAAOC,SAASwJ,eAKpBlC,GAAgBC,EAAOC,MAG1Bc,OAAM,WACLlG,QAAQyD,IACN,oEAvFA4D,CAAwBlC,EAAOC,GAI/BC,UAAUC,cAAc4B,MAAM1B,MAAK,WACjCxF,QAAQyD,IACN,iHAMJyB,GAAgBC,EAAOC,OClC/BE,I","file":"static/js/main.57e30c85.chunk.js","sourcesContent":["import decode from 'jwt-decode';\r\n\r\nclass AuthService {\r\n    // retrieve data saved in token\r\n    getProfile() {\r\n      return decode(this.getToken());\r\n    }\r\n  \r\n    // check if the user is still logged in\r\n    loggedIn() {\r\n      // Checks if there is a saved token and it's still valid\r\n      const token = this.getToken();\r\n      // use type coersion to check if token is NOT undefined and the token is NOT expired\r\n      return !!token && !this.isTokenExpired(token);\r\n    }\r\n  \r\n    // check if the token has expired\r\n    isTokenExpired(token) {\r\n      try {\r\n        const decoded = decode(token);\r\n        if (decoded.exp < Date.now() / 1000) {\r\n          return true;\r\n        } else {\r\n          return false;\r\n        }\r\n      } catch (err) {\r\n        return false;\r\n      }\r\n    }\r\n  \r\n    // retrieve token from localStorage\r\n    getToken() {\r\n      // Retrieves the user token from localStorage\r\n      return localStorage.getItem('id_token');\r\n    }\r\n  \r\n    // set token to localStorage and reload page to homepage\r\n    login(idToken) {\r\n      // Saves user token to localStorage\r\n      localStorage.setItem('id_token', idToken);\r\n  \r\n      window.location.assign('/');\r\n    }\r\n  \r\n    // clear token from localStorage and force logout with reload\r\n    logout() {\r\n      // Clear user token and profile data from localStorage\r\n      localStorage.removeItem('id_token');\r\n      // this will reload the page and reset the state of the application\r\n      window.location.assign('/');\r\n    }\r\n  }\r\n\r\nexport default new AuthService();","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Auth from '../../utils/auth';\r\n\r\nconst Header = () => {\r\n  const logout = event => {\r\n    event.preventDefault();\r\n    Auth.logout();\r\n  };\r\n  return (\r\n    <header className=\"bg-secondary mb-4 py-2 flex-row align-center\">\r\n      <div className=\"container flex-row justify-space-between-lg justify-center align-center\">\r\n        <Link to=\"/\">\r\n          <h1>Deep Thoughts</h1>\r\n        </Link>\r\n\r\n     <nav className=\"text-center\">\r\n         {Auth.loggedIn() ? (\r\n         <>\r\n         <Link to=\"/profile\">Me</Link>\r\n         <a href=\"/\" onClick={logout}>\r\n           Logout\r\n         </a>\r\n        </>\r\n        ) : (\r\n        <>\r\n        <Link to=\"/login\">Login</Link>\r\n        <Link to=\"/signup\">Signup</Link>\r\n        </>\r\n        )}\r\n    </nav>\r\n\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer className=\"w-100 mt-auto bg-secondary p-4\">\r\n      <div className=\"container\">&copy;2020 by Lernantino</div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import gql from 'graphql-tag';\r\n\r\nexport const QUERY_THOUGHTS = gql`\r\n  query thoughts($username: String) {\r\n    thoughts(username: $username) {\r\n      _id\r\n      thoughtText\r\n      createdAt\r\n      username\r\n      reactionCount\r\n      reactions {\r\n        _id\r\n        createdAt\r\n        username\r\n        reactionBody\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const QUERY_THOUGHT = gql`\r\n  query thought($id: ID!) {\r\n    thought(_id: $id) {\r\n      _id\r\n      thoughtText\r\n      createdAt\r\n      username\r\n      reactionCount\r\n      reactions {\r\n        _id\r\n        createdAt\r\n        username\r\n        reactionBody\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n\r\nexport const QUERY_USER = gql`\r\n  query user($username: String!) {\r\n    user(username: $username) {\r\n      _id\r\n      username\r\n      email\r\n      friendCount\r\n      friends {\r\n        _id\r\n        username\r\n      }\r\n      thoughts {\r\n        _id\r\n        thoughtText\r\n        createdAt\r\n        reactionCount\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const QUERY_ME = gql`\r\n  {\r\n    me {\r\n      _id\r\n      username\r\n      email\r\n      friendCount\r\n      thoughts {\r\n        _id\r\n        thoughtText\r\n        createdAt\r\n        reactionCount\r\n        reactions {\r\n          _id\r\n          createdAt\r\n          reactionBody\r\n          username\r\n        }\r\n      }\r\n      friends {\r\n        _id\r\n        username\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const QUERY_ME_BASIC = gql`\r\n  {\r\n    me {\r\n      _id\r\n      username\r\n      email\r\n      friendCount\r\n      friends {\r\n        _id\r\n        username\r\n      }\r\n    }\r\n  }\r\n`;","import gql from 'graphql-tag';\r\n\r\nexport const LOGIN_USER = gql`\r\n  mutation login($email: String!, $password: String!) {\r\n    login(email: $email, password: $password) {\r\n      token\r\n      user {\r\n        _id\r\n        username\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ADD_USER = gql`\r\n  mutation addUser($username: String!, $email: String!, $password: String!) {\r\n    addUser(username: $username, email: $email, password: $password) {\r\n      token\r\n      user {\r\n        _id\r\n        username\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ADD_FRIEND = gql`\r\n  mutation addFriend($id: ID!) {\r\n    addFriend(friendId: $id) {\r\n      _id\r\n      username\r\n      friendCount\r\n      friends {\r\n        _id\r\n        username\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ADD_THOUGHT = gql`\r\n  mutation addThought($thoughtText: String!) {\r\n    addThought(thoughtText: $thoughtText) {\r\n      _id\r\n      thoughtText\r\n      createdAt\r\n      username\r\n      reactionCount\r\n      reactions {\r\n        _id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ADD_REACTION = gql`\r\n  mutation addReaction($thoughtId: ID!, $reactionBody: String!) {\r\n    addReaction(thoughtId: $thoughtId, reactionBody: $reactionBody) {\r\n      _id\r\n      reactionCount\r\n      reactions {\r\n        _id\r\n        reactionBody\r\n        createdAt\r\n        username\r\n      }\r\n    }\r\n  }\r\n`;","import React, { useState } from 'react';\r\n\r\nimport { QUERY_THOUGHTS, QUERY_ME  } from '../../utils/queries';\r\n\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport { ADD_THOUGHT } from '../../utils/mutations';\r\n\r\nconst ThoughtForm = () => {\r\n\r\n  const [addThought, { error }] = useMutation(ADD_THOUGHT, {\r\n    update(cache, { data: { addThought } }) {\r\n      try {\r\n        // could potentially not exist yet, so wrap in a try...catch\r\n        const { thoughts } = cache.readQuery({ query: QUERY_THOUGHTS });\r\n        cache.writeQuery({\r\n          query: QUERY_THOUGHTS,\r\n          data: { thoughts: [addThought, ...thoughts] }\r\n        });\r\n      } catch (e) {\r\n        console.error(e);\r\n      }\r\n  \r\n      // update me object's cache, appending new thought to the end of the array\r\n      const { me } = cache.readQuery({ query: QUERY_ME });\r\n      cache.writeQuery({\r\n        query: QUERY_ME,\r\n        data: { me: { ...me, thoughts: [...me.thoughts, addThought] } }\r\n      });\r\n    }\r\n  });\r\n\r\n    const [thoughtText, setText] = useState('');\r\n    const [characterCount, setCharacterCount] = useState(0);\r\n    \r\n\r\n    const handleChange = event => {\r\n        if (event.target.value.length <= 280) {\r\n          setText(event.target.value);\r\n          setCharacterCount(event.target.value.length);\r\n        }\r\n      };\r\n\r\n      const handleFormSubmit = async event => {\r\n        event.preventDefault();\r\n        try {\r\n          // add thought to database\r\n          await addThought({\r\n            variables: { thoughtText }\r\n          });\r\n      \r\n          // clear form value\r\n          setText('');\r\n          setCharacterCount(0);\r\n        } catch (e) {\r\n          console.error(e);\r\n        }\r\n      };\r\n    \r\n  return (\r\n    <div>\r\n       <p className={`m-0 ${characterCount === 280 || error ? 'text-error' : ''}`}>\r\n       Character Count: {characterCount}/280\r\n      {error && <span className=\"ml-2\">Something went wrong...</span>}\r\n      </p>\r\n      <form\r\n      className=\"flex-row justify-center justify-space-between-md align-stretch\"\r\n      onSubmit={handleFormSubmit}\r\n      >\r\n      <textarea\r\n      placeholder=\"Here's a new thought...\"\r\n      value={thoughtText}\r\n      className=\"form-input col-12 col-md-9\"\r\n      onChange={handleChange}\r\n      ></textarea>\r\n        <button className=\"btn col-12 col-md-3\" type=\"submit\">\r\n          Submit\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ThoughtForm;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst ThoughtList = ({ thoughts, title }) => {\r\n  if (!thoughts.length) {\r\n    return <h3>No Thoughts Yet</h3>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h3>{title}</h3>\r\n      {thoughts &&\r\n        thoughts.map(thought => (\r\n          <div key={thought._id} className=\"card mb-3\">\r\n            <p className=\"card-header\">\r\n  <Link\r\n    to={`/profile/${thought.username}`}\r\n    style={{ fontWeight: 700 }}\r\n    className=\"text-light\"\r\n  >\r\n    {thought.username}\r\n  </Link>{' '}\r\n  thought on {thought.createdAt}\r\n</p>\r\n<div className=\"card-body\">\r\n  <Link to={`/thought/${thought._id}`}>\r\n    <p>{thought.thoughtText}</p>\r\n    <p className=\"mb-0\">\r\n      Reactions: {thought.reactionCount} || Click to{' '}\r\n      {thought.reactionCount ? 'see' : 'start'} the discussion!\r\n    </p>\r\n  </Link>\r\n</div>\r\n          </div>\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ThoughtList;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst FriendList = ({ friendCount, username, friends }) => {\r\n  if (!friends || !friends.length) {\r\n    return <p className=\"bg-dark text-light p-3\">{username}, make some friends!</p>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h5>\r\n        {username}'s {friendCount} {friendCount === 1 ? 'friend' : 'friends'}\r\n      </h5>\r\n      {friends.map(friend => (\r\n        <button className=\"btn w-100 display-block mb-2\" key={friend._id}>\r\n          <Link to={`/profile/${friend.username}`}>{friend.username}</Link>\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FriendList;","import React from 'react';\r\nimport ThoughtForm from '../components/ThoughtForm';\r\nimport ThoughtList from '../components/ThoughtList';\r\nimport FriendList from '../components/FriendList';\r\n\r\n\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport { QUERY_THOUGHTS, QUERY_ME_BASIC } from '../utils/queries';\r\nimport Auth from '../utils/auth';\r\n\r\nconst Home = () => {\r\n  const { loading, data } = useQuery(QUERY_THOUGHTS);\r\n  // use object destructuring to extract `data` from the `useQuery` Hook's response and rename it `userData` to be more descriptive\r\nconst { data: userData } = useQuery(QUERY_ME_BASIC);\r\n  const thoughts = data?.thoughts || [];\r\n  const loggedIn = Auth.loggedIn();\r\n  return (\r\n    <main>  \r\n      <div className=\"flex-row justify-space-between\">\r\n        {loggedIn && (\r\n      <div className=\"col-12 mb-3\">\r\n        <ThoughtForm />\r\n      </div>\r\n    )}\r\n        <div className={`col-12 mb-3 ${loggedIn && 'col-lg-8'}`}>\r\n          {loading ? (\r\n            <div>Loading...</div>\r\n          ) : (\r\n            <ThoughtList thoughts={thoughts} title=\"Some Feed for Thought(s)...\" />\r\n          )}\r\n        </div>\r\n        {loggedIn && userData ? (\r\n      <div className=\"col-12 col-lg-3 mb-3\">\r\n        <FriendList\r\n         username={userData.me.username}\r\n         friendCount={userData.me.friendCount}\r\n         friends={userData.me.friends}\r\n        />\r\n      </div>\r\n        ) : null}\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState } from 'react';\r\nimport Auth from '../utils/auth';\r\n\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport { LOGIN_USER } from '../utils/mutations';\r\nconst Login = (props) => {\r\n  const [formState, setFormState] = useState({ email: '', password: '' });\r\n  const [login, { error }] = useMutation(LOGIN_USER);\r\n\r\n  // update state based on form input changes\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    setFormState({\r\n      ...formState,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n // submit form\r\nconst handleFormSubmit = async event => {\r\n  event.preventDefault();\r\n\r\n  try {\r\n    const { data } = await login({\r\n      variables: { ...formState }\r\n    });\r\n\r\n    Auth.login(data.login.token);\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\n  return (\r\n    <main className='flex-row justify-center mb-4'>\r\n      <div className='col-12 col-md-6'>\r\n        <div className='card'>\r\n          <h4 className='card-header'>Login</h4>\r\n          <div className='card-body'>\r\n            <form onSubmit={handleFormSubmit}>\r\n              <input\r\n                className='form-input'\r\n                placeholder='Your email'\r\n                name='email'\r\n                type='email'\r\n                id='email'\r\n                value={formState.email}\r\n                onChange={handleChange}\r\n              />\r\n              <input\r\n                className='form-input'\r\n                placeholder='******'\r\n                name='password'\r\n                type='password'\r\n                id='password'\r\n                value={formState.password}\r\n                onChange={handleChange}\r\n              />\r\n              <button className='btn d-block w-100' type='submit'>\r\n                Submit\r\n              </button>\r\n            </form>\r\n            {error && <div>Login failed</div>}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React from 'react';\r\n\r\nconst NoMatch = () => {\r\n  return (\r\n    <div>\r\n      Oops, we couldn't find that page.\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoMatch;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst ReactionList = ({ reactions }) => {\r\n  return (\r\n    <div className=\"card mb-3\">\r\n    <div className=\"card-header\">\r\n      <span className=\"text-light\">Reactions</span>\r\n    </div>\r\n    <div className=\"card-body\">\r\n      {reactions &&\r\n        reactions.map(reaction => (\r\n          <p className=\"pill mb-3\" key={reaction._id}>\r\n            {reaction.reactionBody} {'// '}\r\n            <Link to={`/profile/${reaction.username}`} style={{ fontWeight: 700 }}>\r\n              {reaction.username} on {reaction.createdAt}\r\n            </Link>\r\n          </p>\r\n        ))}\r\n    </div>\r\n  </div>\r\n  );\r\n};\r\n\r\nexport default ReactionList;","import React, { useState } from 'react';\r\n\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport { ADD_REACTION } from '../../utils/mutations';\r\n\r\nconst ReactionForm = ({ thoughtId }) => {\r\n  const [reactionBody, setBody] = useState('');\r\n  const [characterCount, setCharacterCount] = useState(0);\r\n  const [addReaction, { error }] = useMutation(ADD_REACTION);\r\n\r\n  // update state based on form input changes\r\n  const handleChange = event => {\r\n    if (event.target.value.length <= 280) {\r\n      setBody(event.target.value);\r\n      setCharacterCount(event.target.value.length);\r\n    }\r\n  };\r\n\r\n  // submit form\r\n  const handleFormSubmit = async event => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      await addReaction({\r\n        variables: { reactionBody, thoughtId }\r\n      });\r\n\r\n      // clear form value\r\n      setBody('');\r\n      setCharacterCount(0);\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <p className={`m-0 ${characterCount === 280 || error ? 'text-error' : ''}`}>\r\n        Character Count: {characterCount}/280\r\n        {error && <span className=\"ml-2\">Something went wrong...</span>}\r\n      </p>\r\n      <form\r\n        className=\"flex-row justify-center justify-space-between-md align-stretch\"\r\n        onSubmit={handleFormSubmit}\r\n      >\r\n        <textarea\r\n          placeholder=\"Leave a reaction to this thought...\"\r\n          value={reactionBody}\r\n          className=\"form-input col-12 col-md-9\"\r\n          onChange={handleChange}\r\n        ></textarea>\r\n\r\n        <button className=\"btn col-12 col-md-3\" type=\"submit\">\r\n          Submit\r\n        </button>\r\n      </form>\r\n\r\n      {error && <div>Something went wrong...</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReactionForm;\r\n","import React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport { QUERY_THOUGHT } from '../utils/queries';\r\nimport ReactionList from '../components/ReactionList';\r\nimport Auth from '../utils/auth';\r\nimport ReactionForm from '../components/ReactionForm'\r\n\r\n\r\nconst SingleThought = props => {\r\n  const { id: thoughtId } = useParams();\r\n  const { loading, data } = useQuery(QUERY_THOUGHT, {\r\n    variables: { id: thoughtId }\r\n  });\r\n  \r\n  const thought = data?.thought || {};\r\n  \r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\nconsole.log(thoughtId);\r\n  return (\r\n    <div>\r\n  <div className=\"card mb-3\">\r\n    <p className=\"card-header\">\r\n      <span style={{ fontWeight: 700 }} className=\"text-light\">\r\n        {thought.username}\r\n      </span>{' '}\r\n      thought on {thought.createdAt}\r\n    </p>\r\n    <div className=\"card-body\">\r\n      <p>{thought.thoughtText}</p>\r\n    </div>\r\n  </div>\r\n\r\n  {thought.reactionCount > 0 && <ReactionList reactions={thought.reactions} />}\r\n  {Auth.loggedIn() && <ReactionForm thoughtId={thought._id} />}\r\n</div>\r\n  );\r\n};\r\n\r\nexport default SingleThought;\r\n","import React from 'react';\r\nimport { Redirect, useParams } from 'react-router-dom';\r\nimport Auth from '../utils/auth';\r\n\r\nimport { ADD_FRIEND } from '../utils/mutations';\r\nimport { useQuery, useMutation } from '@apollo/react-hooks';\r\n\r\nimport ThoughtList from '../components/ThoughtList';\r\nimport FriendList from '../components/FriendList';\r\nimport ThoughtForm from '../components/ThoughtForm';\r\n\r\nimport { QUERY_USER, QUERY_ME } from '../utils/queries';\r\n\r\nconst Profile = () => {\r\n  const { username: userParam } = useParams();\r\n\r\n  const [addFriend] = useMutation(ADD_FRIEND);\r\n\r\n  const { loading, data } = useQuery(userParam ? QUERY_USER : QUERY_ME, {\r\n    variables: { username: userParam }\r\n  });\r\n\r\n  const user = data?.me || data?.user || {};\r\n// redirect to personal profile page if username is the logged-in user's\r\nif (Auth.loggedIn() && Auth.getProfile().data.username === userParam) {\r\n  return <Redirect to=\"/profile\" />;\r\n}\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  if (!user?.username) {\r\n    return (\r\n      <h4>\r\n        You need to be logged in to see this page. Use the navigation links above to sign up or log in!\r\n      </h4>\r\n    );\r\n  }\r\n\r\n  const handleClick = async () => {\r\n    try {\r\n      await addFriend({\r\n        variables: { id: user._id }\r\n      });\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"flex-row mb-3\">\r\n      <h2 className=\"bg-dark text-secondary p-3 display-inline-block\">\r\n       Viewing {userParam ? `${user.username}'s` : 'your'} profile.\r\n      </h2>\r\n      {userParam && (\r\n  <button className=\"btn ml-auto\" onClick={handleClick}>\r\n    Add Friend\r\n  </button>\r\n)}\r\n      </div>\r\n\r\n      <div className=\"flex-row justify-space-between mb-3\">\r\n  <div className=\"col-12 mb-3 col-lg-8\">\r\n    <ThoughtList thoughts={user.thoughts} title={`${user.username}'s thoughts...`} />\r\n  </div>\r\n\r\n  <div className=\"col-12 col-lg-3 mb-3\">\r\n    <FriendList\r\n      username={user.username}\r\n      friendCount={user.friendCount}\r\n      friends={user.friends}\r\n    />\r\n  </div>\r\n</div>\r\n<div className=\"mb-3\">{!userParam && <ThoughtForm />}</div>\r\n    </div>\r\n  );\r\n};\r\nexport default Profile;\r\n","import React, { useState } from 'react';\r\nimport Auth from '../utils/auth';\r\n\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport { ADD_USER } from '../utils/mutations';\r\n\r\nconst Signup = () => {\r\n  const [formState, setFormState] = useState({ username: '', email: '', password: '' });\r\n  const [addUser, { error }] = useMutation(ADD_USER);\r\n  // update state based on form input changes\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    setFormState({\r\n      ...formState,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n// submit form (notice the async!)\r\nconst handleFormSubmit = async event => {\r\n  event.preventDefault();\r\n\r\n  // use try/catch instead of promises to handle errors\r\n  try {\r\n    // execute addUser mutation and pass in variable data from form\r\n    const { data } = await addUser({\r\n      variables: { ...formState }\r\n    });\r\n    Auth.login(data.addUser.token);\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n  return (\r\n    <main className='flex-row justify-center mb-4'>\r\n      <div className='col-12 col-md-6'>\r\n        <div className='card'>\r\n          <h4 className='card-header'>Sign Up</h4>\r\n          <div className='card-body'>\r\n            <form onSubmit={handleFormSubmit}>\r\n              <input\r\n                className='form-input'\r\n                placeholder='Your username'\r\n                name='username'\r\n                type='username'\r\n                id='username'\r\n                value={formState.username}\r\n                onChange={handleChange}\r\n              />\r\n              <input\r\n                className='form-input'\r\n                placeholder='Your email'\r\n                name='email'\r\n                type='email'\r\n                id='email'\r\n                value={formState.email}\r\n                onChange={handleChange}\r\n              />\r\n              <input\r\n                className='form-input'\r\n                placeholder='******'\r\n                name='password'\r\n                type='password'\r\n                id='password'\r\n                value={formState.password}\r\n                onChange={handleChange}\r\n              />\r\n              <button className='btn d-block w-100' type='submit'>\r\n                Submit\r\n              </button>\r\n            </form>\r\n            {error && <div>Sign up failed</div>}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\n\r\nimport { ApolloProvider } from '@apollo/react-hooks';\r\nimport ApolloClient from 'apollo-boost';\r\n\r\nimport Header from './components/Header';\r\nimport Footer from './components/Footer';\r\n\r\nimport Home from './pages/Home';\r\nimport Login from './pages/Login';\r\nimport NoMatch from './pages/NoMatch';\r\nimport SingleThought from './pages/SingleThought';\r\nimport Profile from './pages/Profile';\r\nimport Signup from './pages/Signup';\r\n\r\nconst client = new ApolloClient({\r\n  request: operation => {\r\n    const token = localStorage.getItem('id_token');\r\n\r\n    operation.setContext({\r\n      headers: {\r\n        authorization: token ? `Bearer ${token}` : ''\r\n      }\r\n    });\r\n  },\r\n  uri: '/graphql'\r\n});\r\n\r\nfunction App() {\r\n  return (\r\n    <ApolloProvider client={client}>\r\n      <Router>\r\n        <div className=\"flex-column justify-flex-start min-100-vh\">\r\n          <Header />\r\n          <div className=\"container\">\r\n        <Switch>\r\n        <Route exact path=\"/\" component={Home} />\r\n        <Route exact path=\"/login\" component={Login} />\r\n        <Route exact path=\"/signup\" component={Signup} />\r\n        <Route exact path=\"/profile/:username?\" component={Profile} />\r\n        <Route exact path=\"/thought/:id\" component={SingleThought} />  \r\n        <Route component={NoMatch} />\r\n  </Switch>\r\n</div>\r\n          <Footer />\r\n        </div>\r\n      </Router>\r\n    </ApolloProvider>\r\n  );\r\n}\r\n\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}